<?php

    namespace App\Models;

    use App\Traits\MultiTenantable;
    use Backpack\CRUD\app\Models\Traits\CrudTrait;
    use Illuminate\Database\Eloquent\Factories\HasFactory;
    use Illuminate\Database\Eloquent\Model;

    class OrderItem extends Model
    {
        use HasFactory;
        use MultiTenantable;
        use CrudTrait;

        protected $fillable = [
            'order_id',
            'product_id',
            'product_title',

            'quantity',
            'price',
            'total',

            'business_id',

        ];

        protected static function boot()
        {
            parent::boot(); // TODO: Change the autogenerated stub

            self::creating(
                function ($model) {
                    if (!$model->total) {
                        $model->total = $model->price * $model->quantity;
                    }
                    if (!$model->product_title) {
                        $product = Product::find($model->product_id);
                        $model->product_title = $product->title;
                    }
                }
            );

//            self::created(
//                function ($model) {
////                    On Create create Inventory Log
//                    if ($model->product) {
//                            $newInventoryLog = new InventoryLog();
//                            $newInventoryLog->quantity = $model->quantity;
//                            $newInventoryLog->type = 'sold';
//                            $newInventoryLog->product_id = $model->product->id;
//                            $newInventoryLog->business_id = $model->business->id;
//                            $newInventoryLog->remark = "Order ID: " . $model->order->order_num;
//                            $newInventoryLog->save();
//                    }
//
//                }
//            );
        }

        public function business()
        {
            return $this->belongsTo(Business::class);
        }

        public function order()
        {
            return $this->belongsTo(Order::class);
        }

        public function product()
        {
            return $this->belongsTo(Product::class);
        }
    }
