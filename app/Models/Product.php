<?php

namespace App\Models;

use Illuminate\Database\Eloquent\Builder;
use Illuminate\Database\Eloquent\Factories\HasFactory;
use Illuminate\Database\Eloquent\Model;
use Illuminate\Support\Facades\Storage;

class Product extends Model
{
    use \Backpack\CRUD\app\Models\Traits\CrudTrait;
    use HasFactory;


    protected $fillable = [
        'title',
        'description',
        'image',
        'cost',
        'price',

        'minimum_inventory',
        'alert_quantity',

        'business_id',
        'supplier_id',
    ];


    protected static function boot()
    {
        parent::boot(); // TODO: Change the autogenerated stub

        if (auth()->check()) {

            static::addGlobalScope('checkBusinessId', function (Builder $builder) {
                if (auth()->check()) {
//                    return $builder->where('business_id', auth()->user()['business_id']);
                    if (auth()->user()->isSuperAdmin == false) {
                        return $builder->where('business_id', backpack_user()->business_id);
                    }
                    return $builder;
                }
            });
        }

        static::deleted(function ($obj) {
            Storage::disk('public_folder')->delete($obj->image);

        });
    }

    public function business()
    {
        return $this->belongsTo(Business::class);
    }

    public function supplier()
    {
        return $this->belongsTo(Supplier::class);
    }

    public function inventoryLogs()
    {
        return $this->hasMany(InventoryLog::class);
    }

    public function supplierOrderItems()
    {
        return $this->hasMany(SupplierOrderItem::class);
    }
}
