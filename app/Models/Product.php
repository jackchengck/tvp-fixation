<?php

namespace App\Models;

use App\Traits\MultiTenantable;
use Illuminate\Database\Eloquent\Builder;
use Illuminate\Database\Eloquent\Factories\HasFactory;
use Illuminate\Database\Eloquent\Model;
use Illuminate\Support\Facades\Storage;
use Venturecraft\Revisionable\RevisionableTrait;

class Product extends Model
{
    use MultiTenantable;
    use \Backpack\CRUD\app\Models\Traits\CrudTrait;
    use HasFactory;
    use RevisionableTrait;

    public function identifiableName()
    {
        return $this->title;
    }


    protected $fillable = [
        'title',
        'description',
        'image',
        'cost',
        'price',

        'minimum_inventory',
        'alert_quantity',

        'business_id',
        'supplier_id',
    ];

    protected $casts = [
        'quantity',
        'alert',
    ];


    protected static function boot()
    {
        parent::boot(); // TODO: Change the autogenerated stub

        static::deleted(function ($obj) {
            Storage::disk('public_folder')->delete($obj->image);

        });
    }

    public function business()
    {
        return $this->belongsTo(Business::class);
    }

    public function supplier()
    {
        return $this->belongsTo(Supplier::class);
    }

    public function inventoryLogs()
    {
        return $this->hasMany(InventoryLog::class);
    }

    public function supplierOrderItems()
    {
        return $this->hasMany(SupplierOrderItem::class);
    }

    public function getQuantityAttribute()
    {
        $inventories = InventoryLog::where('product_id', '=', $this->id)->get();

        $inventoryQuantity = 0;

        foreach ($inventories as $inventory) {
            $inventoryQuantity += $inventory->quantity;
        }

        return $inventoryQuantity;
    }

    public function getAlertAttribute()
    {
//        $alert = '<span style="color:red;">Alert! Minium Quantity Reached!</span>';
        $alert = '';


        if ($this->quantity <= $this->alert_quantity) {
            $alert = "Alert Quantity Reached!!";
        }


        if ($this->quantity <= $this->minimum_inventory) {
            $alert = "Minimum Quantity Reached!!!!";
        }


        return $alert;
    }
}
